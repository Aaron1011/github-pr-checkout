/* We first check whether the required elements exist on the webpage. If they
 * do not, it means that either the user is looking at something other than
 * a project page, or that github changed their layout and we need to adapt
 * this code. Either way, this ensures that no errors are generated by this
 * extension due to missing DOM elements. */
var selectors =
    [ '#partial-discussion-stats'
    //'h1.entry-title > strong > a:first-child',
      //'.js-repo-list h2.repolist-name a:first-child',
      // '.org-repo-name a'
    ];

var links = [];
var observers = [];

injected = false;

chrome.runtime.onMessage.addListener(
  function(request, sender, sendResponse) {
    console.log("Message received: " + request.matches + " " + injected);
    if (request.matches && !injected) {

	var observer = new MutationSummary({
        callback: inject,
        queries: [{ element: '#partial-discussion-stats' }]
    });
    observers.push(observer);

    //inject();
	injected = true;
    } else if (!request.matches && injected) {
        removeInjection();
        injected = false;
    }       
});

function removeInjection() {
    for (var i = 0; i < links.length; i++) {
        links[i].remove();
    }
    links = []

    for (var i = 0; i < observers.length; i++) {
        observers[i].disconnect();
    }
    observers = [];
}

function inject() {
    selectors.forEach(function(sel) {
        console.log("Selecting2");
        var els = window.document.querySelector(sel);
	insertStatusIcon(els);
        /*for (var i = 0, l = els.length; i < l; i++) {
            insertStatusIcon(els[i]);
        }*/
    });
}

function insertStatusIcon(el) {
    console.log("Inserting");

    var link = window.document.createElement('a');
    link.href = "foo://" + window.location.href;

    var buddon = window.document.createElement('button');
    buddon.className = "minibutton primary";
    buddon.style.width = "100%";
    buddon.textContent = "Checkout locally";

    link.appendChild(buddon);

    links.push(link);

    el.insertAdjacentElement("afterEnd", link);
}
